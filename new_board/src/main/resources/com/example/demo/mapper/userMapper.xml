<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper">
	<select id="selectBoard" resultType="com.example.demo.newBoard.UserVO">
		SELECT postNum, postMan, postTitle, postMain, postTime  
		FROM freeboard ORDER BY postNum DESC
	</select>
	
	<insert id="insertBoard" parameterType="com.example.demo.newBoard.UserVO">
		INSERT INTO freeboard (postMan, postTitle, postMain) 
		VALUES (#{postMan}, #{postTitle}, #{postMain})
	</insert>
	
	<delete id="delBoard" parameterType="com.example.demo.newBoard.UserVO">
		DELETE FROM freeboard WHERE postNum= #{postNum}
	</delete>
	
	<update id="upPost" parameterType="com.example.demo.newBoard.UserVO" >
		UPDATE freeboard SET 
		postTitle=#{postTitle}, postMain=#{postMain}
		WHERE postNum= #{postNum}
		
		<!-- UPDATE freeboard SET postMain='아아, 수정됐냐? 됐냐고' WHERE postNum= 7 -->
	</update>
	
	<select id="detailPost" resultType="com.example.demo.newBoard.UserVO">
		SELECT postNum, postMan, postTitle, postMain, postTime, postView  
		FROM freeboard WHERE postNum = #{postNum}
	</select>
	
	<update id="increView" parameterType="com.example.demo.newBoard.UserVO">
		UPDATE freeboard 
		SET postView = postView+1 
		WHERE postNum= #{postNum}
	</update>
	
	<select id="totalrec" resultType="int">
		SELECT count(*) FROM freeboard
	</select>
	
	<select id="currentPage" resultType="Map">
		SELECT postNum, postMan, postTitle, postTime, postView 
		FROM freeboard ORDER BY postNum DESC LIMIT #{ListPage},5
	</select>
	 
	<!-- 글 상세보기에 노출될 댓글 리스트 조회 -->
	<select id="selComment" resultType="Map">
		WITH RECURSIVE A AS (
			SELECT ID, postNum, commentMain, depth, parent_ID, groupID
			FROM commentdata AS B WHERE depth=0 AND postNum=#{postNum}
			UNION ALL 
	
			SELECT C.ID, C.postNum, C.commentMain, C.depth, C.parent_ID, C.groupID
			FROM commentdata AS C 
	
			INNER JOIN A 
			ON A.ID = C.parent_ID 
			)
		SELECT * FROM A ORDER BY GROUPID ASC, ID ASC, depth ASC

	</select>
	
	<!-- 본 게시물에 대한 댓글을 달때 사용되는 쿼리문 -->
	<!-- 이 게시물로 작성된 댓글은 무조건 depth가 0으로 고정. groupID는 기존 테이블에서의 최대값+1로 insert됨 -->
	<insert id="regicomment" parameterType="com.example.demo.newBoard.UserVO" >
		<selectKey keyProperty="groupID" order="BEFORE" resultType="integer">
			SELECT MAX(groupID)+1 FROM commentdata
		</selectKey>	
		INSERT INTO commentdata (postNum, commentMain, depth, groupID)
		VALUES (#{postNum}, #{postComment}, #{depth}, #{groupID})
	</insert>
	
	<!-- 본 게시물의 댓글이 아닌, 댓글에 대한 대댓글을 작성할 때 사용되는 쿼리문 -->
	<!-- 프론트에서 groupID와 depth를 계산해서 보내야함 -->
	<insert id="regireply" parameterType="com.example.demo.newBoard.UserVO">
		<!-- <selectKey> 
			SELECT groupID FROM commentdata where ID = #{으아아악}	
		</selectKey> -->
		INSERT INTO commentdata (postNum, commentMain, depth, groupID)
		VALUES (#{postNum}, #{postComment}, #{depth}, #{groupID})
	</insert>
	
</mapper>


